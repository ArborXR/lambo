#!/usr/bin/env bash

### Check for project name argument
if [ $# -eq 0 ]
  then
    echo "Please supply a project name."
    exit 1
fi

## Error handling
abort()
{
    echo >&2 '
***********************************************
*** There was an error running this script. ***
***********************************************
'
    echo "An error occurred. Exiting..." >&2
    exit 1
}

trap 'abort' 0

set -e


## Start script

echo "
***********************
Creating new Laravel app $PROJECTNAME
***********************
"

PROJECTNAME=$1
PROJECTPATH="."
MESSAGE="Initial commit."
EDITOR=""

while [[ $# -gt 1 ]]
do
    key="$1"

    case $key in
        -p|--path)
            PROJECTPATH="$2"
            shift
            ;;
        -m|--message)
            MESSAGE="$2"
            shift
            ;;
        -e|--editor)
            EDITOR="$2"
            shift
            ;;
        *)
            ;;
    esac

    shift
done

cd $PROJECTPATH
laravel new $PROJECTNAME
cd $PROJECTNAME
git init
git add .
git commit -m "$MESSAGE"

if [ "$EDITOR" != "" ]
then
    eval "$EDITOR ."
fi

# Update .env to point to this database with `root` username and blank pw,
# like Mac MySQL defaults
sed -i '' "/DB_DATABASE/s/homestead/$PROJECTNAME/" .env
sed -i '' '/DB_USERNAME/s/homestead/root/' .env
sed -i '' '/DB_PASSWORD/s/secret//' .env

open "http://$PROJECTNAME.dev"

# @todo: Can we make this work with a ternary style assignment instead?
if [ $PROJECTPATH == "." ]
then
    prettyPath="$PROJECTNAME"
else
    prettyPath="$PROJECTPATH/$PROJECTNAME"
fi

echo "

***********************
You're ready to go! Remember to cd into $prettyPath before you start editing."

# End script; disable error handling
trap : 0
